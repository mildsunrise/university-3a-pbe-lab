<?xml version="1.0" encoding="UTF-8" standalone="no" ?><w:document xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main"><w:body><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[classdef interface_chooser < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        AudioConfigFigure        matlab.ui.Figure
        OutputDeviceDropDown     matlab.ui.control.DropDown
        OutputStepLabel          matlab.ui.control.Label
        OutputDeviceLabel        matlab.ui.control.Label
        OutputTestLabel          matlab.ui.control.Label
        OutputTestLeftButton     matlab.ui.control.Button
        OutputTestRightButton    matlab.ui.control.Button
        RequerimentsLabel        matlab.ui.control.Label
        InputDeviceDropDown      matlab.ui.control.DropDown
        InputStepLabel           matlab.ui.control.Label
        InputDeviceLabel         matlab.ui.control.Label
        InputTestLabel           matlab.ui.control.Label
        InputTestRecordButton    matlab.ui.control.Button
        InputTestPlaybackButton  matlab.ui.control.Button
        LatencyStepLabel         matlab.ui.control.Label
        LatencyLabel             matlab.ui.control.Label
        DoneButton               matlab.ui.control.Button
        ReloadButton             matlab.ui.control.Button
        LatencyTestAxes          matlab.ui.control.UIAxes
        LatencyMeasureButton     matlab.ui.control.Button
        LatencyField             matlab.ui.control.NumericEditField
        LatencyUnitsLabel        matlab.ui.control.Label
    end

    
    properties (Access = private)
        OutputDevices % Description
        InputDevices % Description
    end
    
    methods (Access = private)
        
        function loadDevices(app)
            info = audiodevinfo;
            app.InputDevices = info.input;
            app.OutputDevices = info.output;
            
            app.InputDeviceDropDown.Items = {info.input.Name};
            app.InputDeviceDropDown.ItemsData = {info.input.ID};
            app.OutputDeviceDropDown.Items = {info.output.Name};
            app.OutputDeviceDropDown.ItemsData = {info.output.ID};
        end
    end
    

    methods (Access = private)

        % Code that executes after component creation
        function startupFcn(app)
            app.loadDevices
        end

        % Button pushed function: ReloadButton
        function ReloadButtonPushed(app, event)
            app.loadDevices
        end

        % Button pushed function: LatencyMeasureButton
        function LatencyMeasureButtonPushed(app, event)
            d = uiprogressdlg(app.AudioConfigFigure, 'Indeterminate', 'off', 'Message', 'Performing loopback latency measure test...', 'Title', 'Loopback test');
            for i = 1:23
              pause(0.1);
              d.Value = i/23;
            end
            pause(0.2);
            close(d);
        end
    end

    % App initialization and construction
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create AudioConfigFigure
            app.AudioConfigFigure = uifigure;
            app.AudioConfigFigure.Colormap = [0.2431 0.149 0.6588;0.251 0.1647 0.7059;0.2588 0.1804 0.7529;0.2627 0.1961 0.7961;0.2706 0.2157 0.8353;0.2745 0.2353 0.8706;0.2784 0.2549 0.898;0.2784 0.2784 0.9216;0.2824 0.302 0.9412;0.2824 0.3216 0.9569;0.2784 0.3451 0.9725;0.2745 0.3686 0.9843;0.2706 0.3882 0.9922;0.2588 0.4118 0.9961;0.2431 0.4353 1;0.2196 0.4588 0.9961;0.1961 0.4863 0.9882;0.1843 0.5059 0.9804;0.1804 0.5294 0.9686;0.1765 0.549 0.9529;0.1686 0.5686 0.9373;0.1529 0.5922 0.9216;0.1451 0.6078 0.9098;0.1373 0.6275 0.898;0.1255 0.6471 0.8902;0.1098 0.6627 0.8745;0.0941 0.6784 0.8588;0.0706 0.6941 0.8392;0.0314 0.7098 0.8157;0.0039 0.7216 0.7922;0.0078 0.7294 0.7647;0.0431 0.7412 0.7412;0.098 0.749 0.7137;0.1412 0.7569 0.6824;0.1725 0.7686 0.6549;0.1922 0.7765 0.6235;0.2157 0.7843 0.5922;0.2471 0.7922 0.5569;0.2902 0.7961 0.5176;0.3412 0.8 0.4784;0.3922 0.8039 0.4353;0.4471 0.8039 0.3922;0.5059 0.8 0.349;0.5608 0.7961 0.3059;0.6157 0.7882 0.2627;0.6706 0.7804 0.2235;0.7255 0.7686 0.1922;0.7725 0.7608 0.1647;0.8196 0.749 0.1529;0.8627 0.7412 0.1608;0.902 0.7333 0.1765;0.9412 0.7294 0.2118;0.9725 0.7294 0.2392;0.9961 0.7451 0.2353;0.9961 0.7647 0.2196;0.9961 0.7882 0.2039;0.9882 0.8118 0.1882;0.9804 0.8392 0.1765;0.9686 0.8627 0.1647;0.9608 0.8902 0.1529;0.9608 0.9137 0.1412;0.9647 0.9373 0.1255;0.9686 0.9608 0.1059;0.9765 0.9843 0.0824];
            app.AudioConfigFigure.Position = [500 250 419 543];
            app.AudioConfigFigure.Name = 'Audio interfaces';
            app.AudioConfigFigure.Resize = 'off';

            % Create OutputDeviceDropDown
            app.OutputDeviceDropDown = uidropdown(app.AudioConfigFigure);
            app.OutputDeviceDropDown.Tooltip = {'Audio device to use for playback.'};
            app.OutputDeviceDropDown.Position = [93 436 310 22];

            % Create OutputStepLabel
            app.OutputStepLabel = uilabel(app.AudioConfigFigure);
            app.OutputStepLabel.FontWeight = 'bold';
            app.OutputStepLabel.Position = [18 467 385 22];
            app.OutputStepLabel.Text = 'Step 1. Select output device (DAC)';

            % Create OutputDeviceLabel
            app.OutputDeviceLabel = uilabel(app.AudioConfigFigure);
            app.OutputDeviceLabel.Position = [18 436 66 22];
            app.OutputDeviceLabel.Text = 'Device';

            % Create OutputTestLabel
            app.OutputTestLabel = uilabel(app.AudioConfigFigure);
            app.OutputTestLabel.Position = [18 406 66 22];
            app.OutputTestLabel.Text = 'Test';

            % Create OutputTestLeftButton
            app.OutputTestLeftButton = uibutton(app.AudioConfigFigure, 'push');
            app.OutputTestLeftButton.Icon = 'media-play.png';
            app.OutputTestLeftButton.Tooltip = {'Play 4 seconds of a 440Hz tone on the left channel.'};
            app.OutputTestLeftButton.Position = [93 406 81 22];
            app.OutputTestLeftButton.Text = 'Play left';

            % Create OutputTestRightButton
            app.OutputTestRightButton = uibutton(app.AudioConfigFigure, 'push');
            app.OutputTestRightButton.Icon = 'media-play.png';
            app.OutputTestRightButton.Tooltip = {'Play 4 seconds of a 440Hz tone on the right channel.'};
            app.OutputTestRightButton.Position = [183 406 88 22];
            app.OutputTestRightButton.Text = 'Play right';

            % Create RequerimentsLabel
            app.RequerimentsLabel = uilabel(app.AudioConfigFigure);
            app.RequerimentsLabel.Position = [18 498 385 32];
            app.RequerimentsLabel.Text = {'For proper app operation please select the audio interfaces to use.'; 'Make sure the selected devices support 16-bit stereo at 48kHz.'};

            % Create InputDeviceDropDown
            app.InputDeviceDropDown = uidropdown(app.AudioConfigFigure);
            app.InputDeviceDropDown.Tooltip = {'Audio device to use for recording.'};
            app.InputDeviceDropDown.Position = [93 337 310 22];

            % Create InputStepLabel
            app.InputStepLabel = uilabel(app.AudioConfigFigure);
            app.InputStepLabel.FontWeight = 'bold';
            app.InputStepLabel.Position = [18 368 385 22];
            app.InputStepLabel.Text = 'Step 2. Select input device (ADC)';

            % Create InputDeviceLabel
            app.InputDeviceLabel = uilabel(app.AudioConfigFigure);
            app.InputDeviceLabel.Position = [18 337 66 22];
            app.InputDeviceLabel.Text = 'Device';

            % Create InputTestLabel
            app.InputTestLabel = uilabel(app.AudioConfigFigure);
            app.InputTestLabel.Position = [18 306 66 22];
            app.InputTestLabel.Text = 'Test';

            % Create InputTestRecordButton
            app.InputTestRecordButton = uibutton(app.AudioConfigFigure, 'push');
            app.InputTestRecordButton.Icon = 'media-record.png';
            app.InputTestRecordButton.Tooltip = {'Record a four second sample.'};
            app.InputTestRecordButton.Position = [93 306 81 22];
            app.InputTestRecordButton.Text = 'Record';

            % Create InputTestPlaybackButton
            app.InputTestPlaybackButton = uibutton(app.AudioConfigFigure, 'push');
            app.InputTestPlaybackButton.Icon = 'media-play.png';
            app.InputTestPlaybackButton.Enable = 'off';
            app.InputTestPlaybackButton.Tooltip = {'Play the last recorded sample using the configured output device.'};
            app.InputTestPlaybackButton.Position = [183 306 88 22];
            app.InputTestPlaybackButton.Text = 'Playback';

            % Create LatencyStepLabel
            app.LatencyStepLabel = uilabel(app.AudioConfigFigure);
            app.LatencyStepLabel.FontWeight = 'bold';
            app.LatencyStepLabel.Position = [18 267 385 22];
            app.LatencyStepLabel.Text = 'Step 3. Measure loopback latency (delay)';

            % Create LatencyLabel
            app.LatencyLabel = uilabel(app.AudioConfigFigure);
            app.LatencyLabel.Position = [18 237 66 22];
            app.LatencyLabel.Text = 'Latency';

            % Create LatencyUnitsLabel
            app.LatencyUnitsLabel = uilabel(app.AudioConfigFigure);
            app.LatencyUnitsLabel.Position = [181 237 50 22];
            app.LatencyUnitsLabel.Text = 'samples';

            % Create LatencyField
            app.LatencyField = uieditfield(app.AudioConfigFigure, 'numeric');
            app.LatencyField.Limits = [0 Inf];
            app.LatencyField.RoundFractionalValues = 'on';
            app.LatencyField.ValueDisplayFormat = '%11d';
            app.LatencyField.Tooltip = {'Input-to-output latency in samples.'};
            app.LatencyField.Position = [93 237 81 22];

            % Create LatencyMeasureButton
            app.LatencyMeasureButton = uibutton(app.AudioConfigFigure, 'push');
            app.LatencyMeasureButton.ButtonPushedFcn = createCallbackFcn(app, @LatencyMeasureButtonPushed, true);
            app.LatencyMeasureButton.Icon = 'audio.png';
            app.LatencyMeasureButton.Tooltip = {'Perform a loopback test to measure latency.'};
            app.LatencyMeasureButton.Position = [242 237 103 23];
            app.LatencyMeasureButton.Text = 'Mesasure';

            % Create LatencyTestAxes
            app.LatencyTestAxes = uiaxes(app.AudioConfigFigure);
            title(app.LatencyTestAxes, '')
            xlabel(app.LatencyTestAxes, 'time [s]')
            ylabel(app.LatencyTestAxes, '')
            app.LatencyTestAxes.YTick = [0 0.2 0.4 0.6 0.8 1];
            app.LatencyTestAxes.Position = [18 67 385 161];

            % Create ReloadButton
            app.ReloadButton = uibutton(app.AudioConfigFigure, 'push');
            app.ReloadButton.ButtonPushedFcn = createCallbackFcn(app, @ReloadButtonPushed, true);
            app.ReloadButton.Icon = 'reload.png';
            app.ReloadButton.Tooltip = {'Query system for available audio devices.'};
            app.ReloadButton.Position = [18 21 124 34];
            app.ReloadButton.Text = 'Reload devices';

            % Create DoneButton
            app.DoneButton = uibutton(app.AudioConfigFigure, 'push');
            app.DoneButton.Icon = 'check.png';
            app.DoneButton.FontWeight = 'bold';
            app.DoneButton.Enable = 'off';
            app.DoneButton.Tooltip = {'Apply changes.'};
            app.DoneButton.Position = [319 21 84 34];
            app.DoneButton.Text = 'Done';
        end
    end

    methods (Access = public)

        % Construct app
        function app = interface_chooser

            % Create and configure components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.AudioConfigFigure)

            % Execute the startup function
            runStartupFcn(app, @startupFcn)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.AudioConfigFigure)
        end
    end
end]]></w:t></w:r></w:p></w:body></w:document>